
# aim: tutorial R and RStudio -----------------------------------------------------------------

# 0. Introduce myself

Who am I, and which areas I work most
Why I started using R

r notebook
2 pakages created (slopes, odjittering)
Free and Open Source Software <3
drop my contacts

R learning curve
You don't need to know everything!
The best way to learn R is to use it with a specific assingment, work, etc
It is a lot copy - paste - adapting
It is great to test differenr scenarios, apply to other case study, and so on


# 1. Open RStudio

explain the 4 panels

examples in the console:
  3+3
3*3
round(3.14)
round(3.14, 1) #1 digit

, 1 is an argument! explain that it usualy in a function you have several arguments. 
mosr of them have default values, so you dont need to type everything.
using TAB helps you to see which other arguments exist in that function
also, you can see help ?round



## 1.1 Working directory
getwd()
setwd()
Create new project in a existing directory or new directory 


## 1.2 Script

you can have different scrip files! not only with R. See notepad (for instance to take notes for this class), python, RMaekDown.
Depending on what you select, the code will highligth differently with flavors (show import pandas with r and python)

you can also set the colors in global options

comment allways!
ctrl + shift + c # comment
ctrl + shift + r # new section
ctrl + shift + a # arranje 

example
b=1+2*(2-3)


ctrl + enter # run this line
select + ctrl + enter # run selection
# run button will run everythin in the script!

what you write and run is exaclty what you are expected to have. computer will not guess your brain!


# 2. Data structure

TABELA[row, column] or TABELA[case, variable]
c(,, , :)
a = c("Car", "Ped", "Bus") # difference with and without the ""

## 2.1 open Rds
teach the TAB thing # it helps a lot not to typo or to be lost in folder structures!
tab when writing code (vars in table)
() # sometimes if you miss the final bracket, it asks you + ?
""

see what's on the data (environment)

TABLE = readRDS("data/IMOBmodel.Rds") # you can give other name

## 2.2 open csv

(i prefer txt with tab separator)


## 2.3 Type of data
int
num
chr
logical (TRUE / FALSE)

replace chr to num
make as factor for categorical variables

names(TABLE)
explain who the index is read (number of column)

table(TABLE$var)
table(MODEL$Lisboa)

## 2.4 Change a var name
Several ways
mutate(New = Old) |> select(-Old)
names(TABLE)[4] = "New_name"

## 3.3 simple viz
mean
median
(na.rm = TRUE) # if needed

plot(1:100)
plot(cumsum(1:100))

hist(MODEL$Car_perc)
hist(MODEL$Car_perc, labels = TRUE)
abline(v = median(MODEL$Car_perc))
abline(v = median(MODEL$Car_perc), col = "red")
  
plot(MODEL$Distance, MODEL$Duration)

## Pipes !
This_data |> do_this |> do_this ...
change from %>% to |> 

ctrl + shift + m
global options |> code



# 3. Some operations
filter, select
== != < > <= >=
&, |
is.na  !is.na
%in% !%in%

sort, arrange

filter old fashion: TABELA[TABELA$Idade>=18,]
TABELA[TABELA$Idade>18 & TABELA$Genero=="Feminino", c(1:3)]


3.1 Create variables
mutate()

# 4. left_join

MODEL |> left_join(other_table)

explain that both tables dont need to be the same lenght
(can you explain what can happen when shorter / longer, and opposite?)
when the common name (or names!) are the same 
by


# 5. group_by, summarize, (ungroup())

dar exemplo do left_join com uma tabela que nÃ£o se fez ungroup

summarize sem group_by

TRIPSmode_mun |> group_by(Origin_mun) |> summarise(sum())


## Rmd
