{
  "hash": "2d3cb6e1c0d2727398e2cde1010d9c0c",
  "result": {
    "engine": "knitr",
    "markdown": "---\nformat:\n  pdf:\n    prefer-html: true\n---\n\n\n\n\n# Centroids of transport zones\n\nIn this section we will calculate the geometric and the weighted centroids of transport zones.\n\n## Geometric centroids\n\nTaking the `Municipalities_geo` data from the previous section, we will calculate the geometric centroids, using the `st_centroid()` function.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(dplyr)\nlibrary(sf)\nlibrary(mapview)\n\nMunicipalities_geo = st_read(\"../data/Municipalities_geo.gpkg\", quiet = TRUE)\n\nCentroid_geo = st_centroid(Municipalities_geo)\n```\n:::\n\n\n\n\nThis creates points at the geometric center of each polygon.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmapview(Centroid_geo)\n```\n\n::: {.cell-output-display}\n![](centroids_files/figure-pdf/unnamed-chunk-1-1.png){fig-pos='H'}\n:::\n\n```{.r .cell-code}\nmapview(Centroid_geo) + mapview(Municipalities_geo, alpha.regions = 0) # both maps, with full transparency in polygons\n```\n\n::: {.cell-output-display}\n![](centroids_files/figure-pdf/unnamed-chunk-1-2.png){fig-pos='H'}\n:::\n:::\n\n\n\n\nBut...\nis this the best way to represent the center of a transport zone?\n\nThese results may be biased by the shape of the polygons, and not represent where activities are.\nExample: lakes, forests, etc.\n\nTo overcome this, we can use **weighted centroids**.\n\n## Weighted centroids\n\nWe will weight centroids of transport zones by population and by number of buildings.\n\nFor this, we will need the census data [@INEcensus].\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nCensus = st_read(\"../data/census.gpkg\", quiet = TRUE)\n\nmapview(Census |> filter(Municipality == \"Lisboa\"), zcol = \"Population\")\n```\n\n::: {.cell-output-display}\n![](centroids_files/figure-pdf/getcensus-1.png){fig-pos='H'}\n:::\n:::\n\n\n\n\nIt was not that easy to estimate weighted centroids with R, as it is with GIS software.\nBut there is this new package [`centr`](https://ryanzomorrodi.github.io/centr) that can help us [@centr].\n\nWe need to specify the **group** we want to calculate the **mean centroids**, and the **weight variable** we want to use.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(centr)\nCentroid_pop = Census |> \n  mean_center(group = \"Municipality\", weight = \"Population\")\n```\n:::\n\n\n\n\nWe can do the same for buildings.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nCentroid_build = Census |> \n  mean_center(group = \"Municipality\", weight = \"Buildings\")\n```\n:::\n\n\n\n\n## Compare centroids in a map\n\n### Interactive map\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmapview(Centroid_geo, col.region = \"blue\") +\n  mapview(Centroid_pop, col.region = \"red\") +\n  mapview(Centroid_build, col.region = \"black\") +\n  mapview(Municipalities_geo, alpha.regions = 0) # polygon limits\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nfile:////tmp/RtmpfdE0cF/file1d50274db176/widget1d5064b89198.html screenshot completed\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](centroids_files/figure-pdf/mapcomparecentr-1.png){fig-pos='H'}\n:::\n:::\n\n\n\n\nSee how the building, population and geometric centroids of Sintra are apart, from closer to Tagus, to the rural area.\n\n### Static map\n\nTo produce the same map, using only `plot()` and `st_geometry()`, we need to make sure that the geometries have the same crs.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nst_crs(Centroid_geo) # 4326 WGS84\nst_crs(Centroid_pop) # 3763 Portugal TM06\n```\n:::\n\n\n\n\nSo, we need to transform the geometries to the same crs.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nCentroid_pop = st_transform(Centroid_pop, crs = 4326)\nCentroid_build = st_transform(Centroid_build, crs = 4326)\n```\n:::\n\n\n\n\nNow, to use `plot()` we incrementally add layers to the plot.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Plot the Municipalities_geo polygons first (with no fill)\nplot(st_geometry(Municipalities_geo), col = NA, border = \"black\")\n\n# Add the Centroids_geo points in blue\nplot(st_geometry(Centroid_geo), col = \"blue\", pch = 16, add = TRUE) # add!\n\n# Add the Centroid_pop points in red\nplot(st_geometry(Centroid_pop), col = \"red\", pch = 16, add = TRUE)\n\n# Add the Centroid_build points in black\nplot(st_geometry(Centroid_build), col = \"black\", pch = 16, add = TRUE)\n```\n\n::: {.cell-output-display}\n![Static map of different centroids of Municipalities](centroids_files/figure-pdf/unnamed-chunk-5-1.png){fig-pos='H'}\n:::\n:::\n\n\n\n\nIn the [next section](desire-lines.qmd) we will use these centroids to calculate the desire lines between them.\n\n\n\n\n\n",
    "supporting": [
      "centroids_files/figure-pdf"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {
      "knitr": [
        "{\"type\":\"list\",\"attributes\":{},\"value\":[]}"
      ]
    },
    "preserve": null,
    "postProcess": false
  }
}