---
eval: false
code-fold: false
engine: knitr
editor: 
  markdown: 
    wrap: sentence
---

# Software

In this chapter we will guide you through the installation of R, RStudio and the packages you will need for this course.

**R** and **RStudio**[^1] are separate downloads.

[^1]: We will use RStudio, although if you already use other studio such as VScode, that's also fine.

## R

You will need **R** installed on your computer.
**R stats** (how it is also known) is a programming language and free software environment for statistical computing and graphics supported by the R Foundation for Statistical Computing.

The download links live at [The Comprehensive R Archive Network](https://cran.r-project.org/) (aka CRAN).
he most recent version is `4.5.1`, but you can use `>= 4.1.x` if you already have it installed.

:::: {.panel-tabset .nav-pills}
### Windows

[Download R-4.5.1 for Windows](https://cran.r-project.org/bin/windows/base/R-4.5.1-win.exe) and run the executable file.

::: {.callout-important icon="false"}
You will also need to install [Rtools](https://cran.r-project.org/bin/windows/Rtools/rtools45/rtools.html), which is a collection of tools necessary to build R packages in Windows.
:::

### Mac

[Download R-4.5.1 for MacOX](https://cran.r-project.org/).
You will have to choose between the *arm64* or the *x86-64* version.

Download the `.pkg` file and install it as usual.

### Ubuntu

> These are instructions for Ubuntu.
> If you use other linux distribution, please follow the instructions on [The Comprehensive R Archive Network - CRAN](https://cran.r-project.org/bin/linux/).

You can look for R in the Ubuntu **Software Center** or install it via the terminal:

```{bash}
# sudo apt update && sudo apt upgrade -y
sudo apt install r-base
```

**Or**, if you prefer, you can install the latest version of R from CRAN:

```{bash}
# update indices
sudo apt update -qq
# install two helper packages we need
sudo apt install --no-install-recommends software-properties-common dirmngr
# add the signing key (by Michael Rutter) for these repos
wget -qO- https://cloud.r-project.org/bin/linux/ubuntu/marutter_pubkey.asc | sudo tee -a /etc/apt/trusted.gpg.d/cran_ubuntu_key.asc
# add the R 4.0 repo from CRAN -- adjust 'focal' to 'groovy' or 'bionic' as needed
sudo add-apt-repository "deb https://cloud.r-project.org/bin/linux/ubuntu $(lsb_release -cs)-cran40/"
```

Then run:

```{bash}
sudo apt install r-base r-base-core r-recommended r-base-dev
```

\[Optional\] To keep up-to-date r version and packages, you can follow the instructions at [r2u](https://eddelbuettel.github.io/r2u/)
::::

After this installation, you don't need to open R base.
Please proceed to install RStudio.

## RStudio

RStudio Desktop is an integrated development environment (IDE) for R.
It includes a console, syntax-highlighting editor that supports direct code execution, as well as tools for plotting, history, debugging and workspace management.

RStudio is available for free download from [Posit RStudio](https://posit.co/download/rstudio-desktop/).

::: {.panel-tabset .nav-pills}
### Windows 10/11

[Download RStudio 2025.09](https://download1.rstudio.org/electron/windows/RStudio-2025.09.0-387.exe) and run the executable file.

### MacOS

[Download RStudio 2025.09](https://download1.rstudio.org/electron/macos/RStudio-2025.09.0-387.dmg) and install it as usual.

### Ubuntu

> These are instructions for Ubuntu **24**.
> If you use other linux distribution, please follow the instructions on [Posit RStudio](https://posit.co/download/rstudio-desktop/).

Install it via the terminal:

```{bash}
sudo apt install libssl-dev libclang-dev
wget https://download1.rstudio.org/electron/jammy/amd64/rstudio-2025.09.0-387-amd64.deb
sudo dpkg -i rstudio*
rm -v rstudio*
```
:::

## R packages

You will need to install some packages to work with the data and scripts in this course.

You can install them in RStudio by searching for them in the **Packages** tab:

![](images/clipboard-3443685728.png)

**or** by running the following code in the console:

```{r}
install.packages("tidyverse")
install.packages("readxl")

install.packages("sf")
install.packages("mapview")
install.packages("rmarkdown")
install.packages("centr")
install.packages("od")
install.packages("openrouteservice")

install.packages(c("remotes", "devtools", "usethis")) # optional
install.packages("osmextract") # optional
install.packages("stplanr") # optional
```

## TinyTex

To be able to export your Rmakdown document to a **pdf** file, you will need a LaTeX processor.
`tinytex` is a lightweight R package with the most used features of **LaTeX** that you can use with R.

You can install it from RStudio console by running:

```{r}
# you need to run both lines
install.packages("tinytex")
tinytex::install_tinytex()
```

To use some LaTeX packages, you also need to install `tlmgr`.

```{r}
tinytex::tlmgr_install()
tinytex::tlmgr_update() # updates all latex pkgs
```

## Open Route Service {#ors}

For some GIS exercises, we will use the [Open Route Service](https://openrouteservice.org/) to calculate routes and travel times.

In RStudio console, run:

```{r}
# install.packages("openrouteservice")

# instructions to setup at the U-Shift server
options(openrouteservice.url = "https://...") # the server address provided to you
openrouteservice::ors_api_key("") # empty key
```
